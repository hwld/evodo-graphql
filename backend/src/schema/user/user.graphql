extend type Query {
  user(id: ID!): User!

  # authorizationヘッダにあるtokenから対応するdraftUserを取得する
  draftUser: DraftUser!
}

extend type Mutation {
  # もしDBに存在しないユーザーであれば新規登録の準備をする
  initializeSignupIfNew(
    input: InitializeSignupIfNewInput!
  ): InitializeSignupIfNewPayload!

  # 新規登録する
  signup(input: SignupInput!): SignupPayload!
}

type User {
  id: ID!
  name: String!
  avatarUrl: String!
  profile: String!
}

type DraftUser {
  name: String!
  avatarUrl: String!
}

input SignupInput {
  name: String! @constraint(minLength: 1, maxLength: 100)
  avatarUrl: String!
  profile: String! @constraint(maxLength: 100)
}

input InitializeSignupIfNewInput {
  name: String!
  avatarUrl: String!
}

type InitializeSignupIfNewPayload {
  isNewUser: Boolean!
}

type SignupPayload {
  user: User!
}
