extend type Query {
  myTasks: [Task!]!
}

extend type Mutation {
  createTask(input: CreateTaskInput!): CreateTaskPayload!
  deleteTask(id: ID!): DeleteTaskPayload!
  updateTaskTitle(input: UpdateTaskTitleInput!): UpdateTaskTitlePayload!
  doneTask(id: ID!): DoneTaskPayload!
  undoneTask(id: ID!): UndoneTaskPayload!
  updateTaskDetail(input: UpdateTaskDetailInput!): UpdateTaskDetailPayload!
}

type Task {
  id: ID!
  title: String!
  detail: String!
  done: Boolean!
  createdAt: String!
  updatedAt: String!
}

input CreateTaskInput {
  title: String! @constraint(minLength: 1, maxLength: 100)
}

type CreateTaskPayload {
  task: Task!
}

type DeleteTaskPayload {
  task: Task!
}

input UpdateTaskTitleInput {
  id: ID!
  title: String! @constraint(minLength: 1, maxLength: 100)
}

type UpdateTaskTitlePayload {
  task: Task!
}

type DoneTaskPayload {
  task: Task!
}

type UndoneTaskPayload {
  task: Task!
}

input UpdateTaskDetailInput {
  id: ID!
  detail: String! @constraint(maxLength: 1000)
}

type UpdateTaskDetailPayload {
  task: Task!
}
